DECLARE PLUGIN "coq-simple-io.plugin"

{
open Stdarg
open IOLib

let run_ast = mk_ref "SimpleIO.IO_Monad.IO.unsafe_run'"

let run c =
  Feedback.msg_info (Pp.str ("Running " ^ string_of_constr_expr c ^ " ..."));
  run ~plugin_name:"coq_simple_io"
    (CAst.make @@ apply_constr run_ast [c])
}

VERNAC COMMAND EXTEND RunIO CLASSIFIED AS SIDEFF
  | ["RunIO" constr(c)] -> {run c}
  | ["RunIO" "Include" string(s)] -> { add_extra_dir s }
  | ["RunIO" "Open" string(s)] -> { add_module_to_open s }
  | ["RunIO" "Package" string(s)] -> { add_extra_pkg s }
  | ["RunIO" "Builder" "Basic"] -> { set_builder Ocamlfind }
  | ["RunIO" "Builder" "Ocamlbuild"] -> { set_builder Ocamlbuild }
  | ["RunIO" "Builder" "Dune" string(s)] -> { set_builder (Dune s) }
  | ["RunIO" "Smart" "On"] -> { smart_mode := true }
  | ["RunIO" "Smart" "Off"] -> { smart_mode := false }
END
